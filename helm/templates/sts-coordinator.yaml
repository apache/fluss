#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: coordinator-server
  labels:
  {{- include "fluss.labels" . | nindent 4 }}
spec:
  serviceName: coordinator-server-hs
  replicas: 1 # can only be 1 for now
  selector:
    matchLabels:
      {{- include "fluss.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: coordinator
  template:
    metadata:
      labels:
        {{- include "fluss.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: coordinator
    spec:
      containers:
        - name: {{ .Chart.Name }}-coordinator
          image: "{{.Values.image.repository}}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POD_NAME
              valueFrom: 
                fieldRef: 
                  fieldPath: metadata.name 
            - name: POD_IP
              valueFrom: 
                fieldRef: 
                  fieldPath: status.podIP
            - name: POD_NAMESPACE
              valueFrom: 
                fieldRef: 
                  fieldPath: metadata.namespace
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          command:
            - "/bin/sh"
            - "-c"
            - |
              export FLUSS_SERVER_ID=${POD_NAME##*-} && \
              cp /opt/conf/server.yaml $FLUSS_HOME/conf && \

              echo "" >> $FLUSS_HOME/conf/server.yaml && \
              echo "tablet-server.id: ${FLUSS_SERVER_ID}" >> $FLUSS_HOME/conf/server.yaml && \
              echo "bind.listeners: INTERNAL://0.0.0.0:{{ .Values.appConfig.internalPort }}, CLIENT://0.0.0.0:{{ .Values.appConfig.externalPort }}" >> $FLUSS_HOME/conf/server.yaml && \
              echo "advertised.listeners: CLIENT://${POD_NAME}.coordinator-server-hs.${POD_NAMESPACE}.svc.cluster.local:{{ .Values.appConfig.externalPort }}" >> $FLUSS_HOME/conf/server.yaml && \

              bin/coordinator-server.sh start-foreground
          livenessProbe:
            failureThreshold: 100
            timeoutSeconds: 1
            initialDelaySeconds: 10
            periodSeconds: 3
            tcpSocket:
              port: {{.Values.appConfig.externalPort}}
          readinessProbe:
            failureThreshold: 100
            timeoutSeconds: 1
            initialDelaySeconds: 10
            periodSeconds: 3
            tcpSocket:
              port: {{.Values.appConfig.externalPort}}
          resources:
            {{- toYaml .Values.resources.tabletServer | nindent 12 }}
          volumeMounts:
            - name: fluss-conf
              mountPath: /opt/conf
            - name: data
              mountPath: /tmp/fluss/data
      volumes:
        - name: fluss-conf
          configMap:
            name: fluss-conf-file
        {{- if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
        {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        storageClassName: {{ .Values.persistence.storageClass }}
  {{- end}}